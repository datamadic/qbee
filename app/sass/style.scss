
/*this is the demo cube stuff, and it works to flip a cube */

#cube {
  width: 100%;
  height: 100%;
  position: absolute;
  transform-style: preserve-3d;
}

#cube figure {
  width: 196px;
  height: 196px;
  display: block;
  position: absolute;
  border: 2px solid black;
}

/*#cube .front  { transform: rotateY(   0deg ) translateZ( 100px ); }
#cube .back   { transform: rotateX( 180deg ) translateZ( 100px ); }
#cube .right  { transform: rotateY(  90deg ) translateZ( 100px ); }
#cube .left   { transform: rotateY( -90deg ) translateZ( 100px ); }
#cube .top    { transform: rotateX(  90deg ) translateZ( 100px ); }
#cube .bottom { transform: rotateX( -90deg ) translateZ( 100px ); }*/

/*#cube.show-front  { transform: translateZ( -100px ) rotateY(    0deg ); }
#cube.show-back   { transform: translateZ( -100px ) rotateX( -180deg ); }
#cube.show-right  { transform: translateZ( -100px ) rotateY(  -90deg ); }
#cube.show-left   { transform: translateZ( -100px ) rotateY(   90deg ); }
#cube.show-top    { transform: translateZ( -100px ) rotateX(  -90deg ); }
#cube.show-bottom { transform: translateZ( -100px ) rotateX(   90deg ); }*/

/*#cube { transform: translateZ( -100px ); }
#cube { transition: transform 1s; }*/


/*end of the working demo*/

@import "compass/css3/transform";
@import "compass/css3/transition";
@import "compass/support";

#cube { transform: translateZ( -100px ); }
#cube {
  /*transition: transform 5s; */
  /*transition-duration(5s);*/
  /*transition: transform 5s;*/
  /*transition: transform 1s ease-in-out;*/

  transition: transform 2s ease-in-out;

  -webkit-transform-style: preserve-3d;

  @include transition(transform 2s ease-in-out);


}


/*#cube .front  {@include transform(rotate3d(  0, 1, 0, 0deg )   translateZ( 100px ))}
#cube .back   {@include transform(rotate3d(  1, 0, 0, 180deg )   translateZ( 100px ))}
#cube .right  {@include transform(rotate3d(  0, 1, 0, 90deg )   translateZ( 100px ))}
#cube .left   {@include transform(rotate3d(  0, 1, 0, -90deg )  translateZ( 100px ))}
#cube .top    {@include transform(rotate3d(  1, 0, 0, 90deg )  translateZ( 100px ))}
#cube .bottom {@include transform(rotate3d(  1, 0, 0, -90deg )  translateZ( 100px ))}*/




#cube .front  { @include transform( rotateY(   0deg ) translateZ( 100px ) ) }
#cube .back   { @include transform( rotateX( 180deg ) translateZ( 100px ) ) }
#cube .right  { @include transform( rotateY(  90deg ) translateZ( 100px ) ) }
#cube .left   { @include transform( rotateY( -90deg ) translateZ( 100px ) ) }
#cube .top    { @include transform( rotateX(  90deg ) translateZ( 100px ) ) }
#cube .bottom { @include transform( rotateX( -90deg ) translateZ( 100px ) ) }


/*
#cube.show-front  { @include transform( translateZ( -100px ) rotateY(    0deg )  ) }
#cube.show-back   { @include transform( translateZ( -100px ) rotateX( -180deg )  ) }
#cube.show-right  { @include transform( translateZ( -100px ) rotateY(  -90deg )  ) }
#cube.show-left   { @include transform( translateZ( -100px ) rotateY(   90deg )  ) }
#cube.show-top    { @include transform( translateZ( -100px ) rotateX(  -90deg )  ) }
#cube.show-bottom { @include transform( translateZ( -100px ) rotateX(   90deg )  ) }
*/


#cube.show-front  ,
#cube.show-back   ,
#cube.show-right  ,
#cube.show-left   ,
#cube.show-top    ,
#cube.show-bottom {
  @include rotate3d(  0, 1, 0, 90deg );
  /*@include rotateY( 90deg);*/
}



/*
#cube.show-front  { transform: translateZ( -100px ) rotateY(    0deg ); }
#cube.show-back   { transform: translateZ( -100px ) rotateX( -180deg ); }
#cube.show-right  { transform: translateZ( -100px ) rotateY(  -90deg ); }
#cube.show-left   { transform: translateZ( -100px ) rotateY(   90deg ); }
#cube.show-top    { transform: translateZ( -100px ) rotateX(  -90deg ); }
#cube.show-bottom { transform: translateZ( -100px ) rotateX(   90deg ); }
*/







.ncubeface {
  width : 150px;
  height: 200px;
  background-color: gray;
  outline: 2px solid darkgreen;
}
.nheader {
  background-color: black;
  color : whitesmoke;
  padding: 0 10px;
}
.nbody {
  padding: 0 10px;
}

.nrow {
  padding: 10px 0;
  border-bottom: 2px solid darkgreen;
}

.ncubeface {
  position: absolute;
}

.ncube-container {
  width: 150px;
  height: 200px;
  position: relative;
  perspective: 1000px;
}

.cube, .prism {
  width: 150px;
  height: 200px;
  position: absolute;
  transform-style: preserve-3d;
}

/*.cube figure,
.prism figure {
  width: 196px;
  height: 196px;
  display: block;
  position: absolute;
  border: 2px solid black;
}*/

.faces {
  width: 150px;
  height: 200px;
  position: absolute;
  transform-style: preserve-3d;
}


.faces .front  { transform: rotateY(   0deg ) translateZ( 75px ); }
.faces .back   { transform: rotateY( 180deg ) translateZ( 75px ); }
.faces .right  { transform: rotateY(  90deg ) translateZ( 75px ); }
.faces .left   { transform: rotateY( -90deg ) translateZ( 75px ); }
.faces .top    { transform: rotateX(  90deg ) translateZ( 75px ); }
.faces .bottom { transform: rotateX( -90deg ) translateZ( 75px ); }


.cube { transform: translateZ( -75px ); }
.prism { transform: translateZ( -86px ); }

.faces.show-front  { transform: translateZ( -75px ) rotateY(    0deg ); }
.faces.show-back   { transform: translateZ( -75px ) rotateX( -180deg ); }
.faces.show-right  { transform: translateZ( -75px ) rotateY(  -90deg ); }
.faces.show-left   { transform: translateZ( -75px ) rotateY(   90deg ); }
.faces.show-top    { transform: translateZ( -75px ) rotateX(  -90deg ); }
.faces.show-bottom { transform: translateZ( -75px ) rotateX(   90deg ); }

.faces { transition: transform 1s; }



